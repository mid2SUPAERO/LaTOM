.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_visualization_om_mm_visu.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_visualization_om_mm_visu.py:


OpenMDAO MetaModel visualization
================================

This examples loads an OpenMDAO MetaModel stored in `latom.data.metamodels`, predicts additional outputs interpolating
existing data and plots the corresponding response surface.

@authors: Alberto FOSSA' Giuliana Elena MICELI


.. code-block:: default


    import numpy as np

    from latom.surrogate.om_metamodels import MetaModel

    # MetaModel settings
    distributed = False  # variables distributed across multiple processes
    extrapolate = False  # extrapolation for out-of-bounds inputs

    # interpolation method among slinear, lagrange2, lagrange3, cubic, akima, scipy_cubic, scipy_slinear, scipy_quintic
    interp_method = 'scipy_quintic'

    training_data_gradients = True  # compute gradients wrt output training data
    vec_size = 1  # number of points to evaluate at once
    rec_file = 'llo2apo_mm.pkl'  # name of the file on which the solution is serialized
    kind = 'prop'  # quantity to display, prop for propellant fraction or final for final/initial mass ratio

    # initialize MetaModel
    mm = MetaModel(distributed=distributed, extrapolate=extrapolate, method=interp_method,
                   training_data_gradients=training_data_gradients, vec_size=vec_size, rec_file=rec_file)

    # predict additional outputs
    mm.p['twr'] = 0.5  # twr values for prediction [-]
    mm.p['Isp'] = 390.  # Isp values for prediction [s]
    m_prop = mm.p['mm.m_prop']  # predicted propellant fraction [-]

    print('Predicted propellant fraction: ', m_prop)

    # plot response surface
    mm.p.run_model()
    mm.plot(nb_lines=40, log_scale=False, kind=kind)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_examples_visualization_om_mm_visu.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: om_mm_visu.py <om_mm_visu.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: om_mm_visu.ipynb <om_mm_visu.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
